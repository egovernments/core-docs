swagger: "2.0"
info:
  description: "This is a sample specification for Birth Certificate server as part of the DIGIT Design Guide."
  version: "1.0.0"
  title: "Birth Certificate"
host: "sandbox.digit.org/birth-certificate"
basePath: "/v1"
tags:
- name: "Birth Certificate"
  description: "Apply, Update, Verify and Approve Birth Certificate"
schemes:
- "https"
- "http"
paths:
  /birthcertificate:
    post:
      tags:
      - "birthcertificate"
      summary: "Apply for a new birth certificate"
      description: ""
      operationId: "applyBirthCertificate"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Birth Certificate object that needs to be registered."
        required: true
        schema:
          $ref: "#/definitions/BirthCertificate"
      responses:
        "405":
          description: "Invalid input"
    put:
      tags:
      - "birthcertificate"
      summary: "Update an existing birth certificate"
      description: ""
      operationId: "updateBirthCertificate"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Birth Certitifcate object that needs to be registered."
        required: true
        schema:
          $ref: "#/definitions/BirthCertificate"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Application not found"
        "405":
          description: "Validation exception"
  /birthcertificate/{birthCertificateId}:
    get:
      tags:
      - "birthcertificate"
      summary: "Find birth certificate by ID"
      description: "Returns a single birth certificate"
      operationId: "getBirthCertificateById"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "birthCertificateId"
        in: "path"
        description: "ID of Birth Certificate to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/BirthCertificate"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Birth Certificate not found"

definitions:
  BirthCertificate:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      birthCertificateId:
        type: "integer"
        format: "int64"
      name:
        type: "string"
        format: "Name"
      birthDate:
        type: "string"
        format: "date-time"
      status:
        type: "string"
        description: "Application Status"
        enum:
        - "new"
        - "approved"
        - "delivered"
      complete:
        type: "boolean"
        default: false
    xml:
      name: "Order"
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"
externalDocs:
  description: "Find out more about DIGIT"
  url: "https://digit.org"